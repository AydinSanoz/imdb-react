{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/catalina/Desktop/repositories/RJ-Imdb/src/Pages/Details.js\",\n    _s = $RefreshSig$();\n\nimport { StyledMainContainer, StyledSectionContainer, StyledSectionWrapper } from './Styles';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StyledCardFav, StyledCardImage, StyledCardPoint, StyledCardTitle, StyledBottomWrapper } from '../components/Card/Card.style';\nimport { StyledDetailCardWrapper, StyledImageWrapper, StyledLogoWrapper } from './Styles';\nimport { VideoList } from './Sections';\nconst myApi = '64f9385d47c970d860ccd6c147841242';\nconst movieDetailBaseUrl = 'https://api.themoviedb.org/3/movie/';\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w500';\nexport const Details = props => {\n  _s();\n\n  const [movieDetails, setMovieDetails] = useState('');\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(movieDetailBaseUrl + id, {\n      params: {\n        api_key: myApi\n      }\n    }).then(res => setMovieDetails(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledMainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(VideoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(StyledSectionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledImageWrapper, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(StyledDetailCardWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(StyledCardImage, {\n              src: baseImageUrl + movieDetails.poster_path,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledCardTitle, {\n              children: movieDetails.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledBottomWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(StyledCardFav, {\n                children: [\"Rate:\", movieDetails.popularity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledCardPoint, {\n                children: [\"Point:\", movieDetails.point]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSectionWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movieDetails.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 43\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 44\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: movieDetails.homepage,\n          children: \"HOMEPAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieDetails.video && 'Trailer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}; // id: \"533ec652c3a36854480001b1\"\n// iso_639_1: \"en\"\n// iso_3166_1: \"US\"\n// key: \"N1XmtdMZdL8\"\n// name: \"Star Trek IX: Insurrection - Trailer. Available in United States only.\"\n// site: \"YouTube\"\n// size: 720\n// type: \"Trailer\"\n// adult: false\n// backdrop_path: null\n// belongs_to_collection: null\n// budget: 0\n// genres: [{…}]\n// homepage: \"http://www.dasvidaniya.in/\"\n// id: 14751\n// imdb_id: \"tt1288638\"\n// original_language: \"hi\"\n// original_title: \"Dasvidaniya\"\n// overview: \"A man who loves to make \"to-do lists\" makes one last bucket list when he realizes he is about to die.\"\n// popularity: 3.707\n// poster_path: null\n// production_companies: [{…}]\n// production_countries: (2) [{…}, {…}]\n// release_date: \"2008-11-07\"\n// revenue: 0\n// runtime: 117\n// spoken_languages: [{…}]\n// status: \"Released\"\n// tagline: \"The Best Goodbye Ever\"\n// title: \"Dasvidaniya\"\n// video: false\n// vote_average: 7\n// vote_count: 22\n\n_s(Details, \"HIRdNF5nxU+SpCPozky24Nbnv1k=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/catalina/Desktop/repositories/RJ-Imdb/src/Pages/Details.js"],"names":["StyledMainContainer","StyledSectionContainer","StyledSectionWrapper","axios","useEffect","useState","useParams","StyledCardFav","StyledCardImage","StyledCardPoint","StyledCardTitle","StyledBottomWrapper","StyledDetailCardWrapper","StyledImageWrapper","StyledLogoWrapper","VideoList","myApi","movieDetailBaseUrl","baseImageUrl","Details","props","movieDetails","setMovieDetails","id","get","params","api_key","then","res","data","poster_path","title","popularity","point","overview","homepage","video"],"mappings":"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","sourcesContent":["import {\n  StyledMainContainer,\n  StyledSectionContainer,\n  StyledSectionWrapper,\n} from './Styles';\n\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {\n  StyledCardFav,\n  StyledCardImage,\n  StyledCardPoint,\n  StyledCardTitle,\n  StyledBottomWrapper,\n \n} from '../components/Card/Card.style';\nimport {StyledDetailCardWrapper ,  StyledImageWrapper, StyledLogoWrapper} from './Styles';\nimport { VideoList } from './Sections';\n\nconst myApi = '64f9385d47c970d860ccd6c147841242';\nconst movieDetailBaseUrl = 'https://api.themoviedb.org/3/movie/';\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w500';\n\nexport const Details = (props) => {\n  const [movieDetails, setMovieDetails] = useState('');\n  const {id} = useParams();\n\n\n  useEffect(() => {\n    axios\n      .get(movieDetailBaseUrl + id, {\n        params: {\n          api_key: myApi,\n        },\n      })\n      .then((res) => setMovieDetails(res.data));\n  }, []);\n\n  return (\n    <StyledMainContainer>\n     <VideoList/>\n     \n      <StyledSectionContainer>\n        <StyledImageWrapper>\n          <>\n            <StyledDetailCardWrapper>\n              <StyledCardImage\n                src={baseImageUrl + movieDetails.poster_path}\n                alt=\"\"\n              />\n              <StyledCardTitle>{movieDetails.title}</StyledCardTitle>\n              <StyledBottomWrapper>\n                <StyledCardFav>Rate:{movieDetails.popularity}</StyledCardFav>\n                <StyledCardPoint>Point:{movieDetails.point}</StyledCardPoint>\n              </StyledBottomWrapper>\n            </StyledDetailCardWrapper>\n          </>\n        </StyledImageWrapper>\n\n        \n        <StyledSectionWrapper>\n         \n            <h1>{movieDetails.title}</h1> <hr/> <hr/>\n            <p>{movieDetails.overview}</p>\n            <p>{movieDetails.overview}</p>\n            <p>{movieDetails.overview}</p>\n            <p>{movieDetails.overview}</p> <hr/> <hr/>\n            <p>{movieDetails.overview}</p>\n            <p>{movieDetails.overview}</p>\n            <p>{movieDetails.overview}</p> <hr/><hr/>\n            <a href={movieDetails.homepage}>HOMEPAGE</a>\n            \n            <p>{movieDetails.video && 'Trailer'}</p>\n          \n        </StyledSectionWrapper>\n        \n      </StyledSectionContainer>\n    </StyledMainContainer>\n  );\n};\n\n// id: \"533ec652c3a36854480001b1\"\n// iso_639_1: \"en\"\n// iso_3166_1: \"US\"\n// key: \"N1XmtdMZdL8\"\n// name: \"Star Trek IX: Insurrection - Trailer. Available in United States only.\"\n// site: \"YouTube\"\n// size: 720\n// type: \"Trailer\"\n\n// adult: false\n// backdrop_path: null\n// belongs_to_collection: null\n// budget: 0\n// genres: [{…}]\n// homepage: \"http://www.dasvidaniya.in/\"\n// id: 14751\n// imdb_id: \"tt1288638\"\n// original_language: \"hi\"\n// original_title: \"Dasvidaniya\"\n// overview: \"A man who loves to make \"to-do lists\" makes one last bucket list when he realizes he is about to die.\"\n// popularity: 3.707\n// poster_path: null\n// production_companies: [{…}]\n// production_countries: (2) [{…}, {…}]\n// release_date: \"2008-11-07\"\n// revenue: 0\n// runtime: 117\n// spoken_languages: [{…}]\n// status: \"Released\"\n// tagline: \"The Best Goodbye Ever\"\n// title: \"Dasvidaniya\"\n// video: false\n// vote_average: 7\n// vote_count: 22\n"]},"metadata":{},"sourceType":"module"}