{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/catalina/Desktop/repositories/RJ-Imdb/src/Pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { StyledMainContainer } from './Styles';\nimport { MovieList, TvList, PlayingList, VideoList } from './Sections';\nimport { ListContext, SearchContext } from '../context';\nconst myApi = '64f9385d47c970d860ccd6c147841242';\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\nconst baseMovieUrl = 'https://api.themoviedb.org/3/search/movie';\nconst baseTvUrl = 'https://api.themoviedb.org/3/search/tv';\nconst baseVideoUrl = 'https://api.themoviedb.org/3/movie/200/videos';\nconst baseNowPlayingUrl = 'https://api.themoviedb.org/3/movie/now_playing';\nconst baseYouTubeUrl = 'https://www.youtube.com/embed';\nexport const Home = () => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [tvList, setTvList] = useState([]);\n  const [videoList, setVideoList] = useState([]);\n  const [nowPlayingList, setNowPlayingList] = useState([]);\n  const {\n    inputVal,\n    query\n  } = useContext(SearchContext);\n  console.log('Home -> videoList', videoList);\n  useEffect(() => {\n    axios.get(baseMovieUrl, {\n      params: {\n        api_key: myApi,\n        query: inputVal || 'a',\n        page: 1\n      }\n    }).then(res => setMovieList(res.data.results)).catch(err => console.log(err)).finally();\n  }, [inputVal]);\n  useEffect(() => {\n    axios.get(baseTvUrl, {\n      params: {\n        api_key: myApi,\n        query: inputVal || 'a'\n      }\n    }).then(res => setTvList(res.data.results));\n  }, [inputVal]);\n  useEffect(() => {\n    axios.get(baseNowPlayingUrl, {\n      params: {\n        api_key: myApi,\n        page: 1\n      }\n    }).then(res => setNowPlayingList(res.data.results));\n  }, [inputVal]);\n  useEffect(() => {\n    axios.get(baseVideoUrl, {\n      params: {\n        api_key: myApi\n      }\n    }).then(res => setVideoList(res.data.results)).catch().finally();\n  }, [inputVal]);\n  return /*#__PURE__*/_jsxDEV(StyledMainContainer, {\n    children: /*#__PURE__*/_jsxDEV(ListContext.Provider, {\n      value: {\n        movieList,\n        baseImgUrl,\n        tvList,\n        nowPlayingList,\n        videoList,\n        baseYouTubeUrl\n      },\n      children: [/*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TvList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayingList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"blxH+3TwqUonrpPGVGOMY7IDpg8=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/catalina/Desktop/repositories/RJ-Imdb/src/Pages/Home.js"],"names":["useContext","useEffect","useState","axios","StyledMainContainer","MovieList","TvList","PlayingList","VideoList","ListContext","SearchContext","myApi","baseImgUrl","baseMovieUrl","baseTvUrl","baseVideoUrl","baseNowPlayingUrl","baseYouTubeUrl","Home","movieList","setMovieList","tvList","setTvList","videoList","setVideoList","nowPlayingList","setNowPlayingList","inputVal","query","console","log","get","params","api_key","page","then","res","data","results","catch","err","finally"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { StyledMainContainer } from './Styles';\nimport { MovieList, TvList, PlayingList, VideoList } from './Sections';\nimport { ListContext, SearchContext } from '../context';\n\nconst myApi = '64f9385d47c970d860ccd6c147841242';\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\nconst baseMovieUrl = 'https://api.themoviedb.org/3/search/movie';\nconst baseTvUrl = 'https://api.themoviedb.org/3/search/tv';\nconst baseVideoUrl = 'https://api.themoviedb.org/3/movie/200/videos';\nconst baseNowPlayingUrl = 'https://api.themoviedb.org/3/movie/now_playing';\nconst baseYouTubeUrl = 'https://www.youtube.com/embed';\n\nexport const Home = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [tvList, setTvList] = useState([]);\n  const [videoList, setVideoList] = useState([]);\n  const [nowPlayingList, setNowPlayingList] = useState([]);\n\n  const { inputVal, query } = useContext(SearchContext);\n  console.log('Home -> videoList', videoList);\n\n  useEffect(() => {\n    axios\n      .get(baseMovieUrl, {\n        params: {\n          api_key: myApi,\n          query: inputVal || 'a',\n          page: 1,\n        },\n      })\n      .then((res) => setMovieList(res.data.results))\n      .catch((err) => console.log(err))\n      .finally();\n  }, [inputVal]);\n\n  useEffect(() => {\n    axios\n      .get(baseTvUrl, {\n        params: {\n          api_key: myApi,\n          query: inputVal || 'a',\n        },\n      })\n      .then((res) => setTvList(res.data.results));\n  }, [inputVal]);\n\n  useEffect(() => {\n    axios\n      .get(baseNowPlayingUrl, {\n        params: {\n          api_key: myApi,\n          page: 1,\n        },\n      })\n      .then((res) => setNowPlayingList(res.data.results));\n  }, [inputVal]);\n\n  useEffect(() => {\n    axios\n      .get(baseVideoUrl, {\n        params: {\n          api_key: myApi,\n        },\n      })\n      .then((res)=>setVideoList(res.data.results))\n      .catch()\n      .finally();\n  }, [inputVal]);\n\n  return (\n    <StyledMainContainer>\n      <ListContext.Provider\n        value={{\n          movieList,\n          baseImgUrl,\n          tvList,\n          nowPlayingList,\n          videoList,\n          baseYouTubeUrl,\n        }}\n      >\n        <MovieList />\n        <TvList />\n        <PlayingList />\n      </ListContext.Provider>\n    </StyledMainContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}