{"ast":null,"code":"import _slicedToArray from\"/Users/catalina/Desktop/repositories/imdb-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useContext,useEffect,useState}from'react';import axios from'axios';import{StyledMainContainer}from'./Styles';import{MovieList,TvList,PlayingList,VideoList}from'./Sections';import{ListContext,SearchContext}from'../context';var myApi='64f9385d47c970d860ccd6c147841242';var baseImgUrl='https://image.tmdb.org/t/p/w500';var baseMovieUrl='https://api.themoviedb.org/3/search/movie';var baseTvUrl='https://api.themoviedb.org/3/search/tv';var baseVideoUrl='https://api.themoviedb.org/3/movie/200/videos';var baseNowPlayingUrl='https://api.themoviedb.org/3/movie/now_playing';var baseYouTubeUrl='https://www.youtube.com/embed';export var Home=function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieList=_useState2[0],setMovieList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tvList=_useState4[0],setTvList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),videoList=_useState6[0],setVideoList=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),nowPlayingList=_useState8[0],setNowPlayingList=_useState8[1];var _useContext=useContext(SearchContext),inputVal=_useContext.inputVal,query=_useContext.query;console.log('Home -> videoList',videoList);useEffect(function(){axios.get(baseMovieUrl,{params:{api_key:myApi,query:inputVal||'a',page:1}}).then(function(res){return setMovieList(res.data.results);}).catch(function(err){return console.log(err);}).finally();},[inputVal]);useEffect(function(){axios.get(baseTvUrl,{params:{api_key:myApi,query:inputVal||'a'}}).then(function(res){return setTvList(res.data.results);});},[inputVal]);useEffect(function(){axios.get(baseNowPlayingUrl,{params:{api_key:myApi,page:1}}).then(function(res){return setNowPlayingList(res.data.results);});},[inputVal]);useEffect(function(){axios.get(baseVideoUrl,{params:{api_key:myApi}}).then(function(res){return setVideoList(res.data.results);}).catch().finally();},[inputVal]);return/*#__PURE__*/_jsx(StyledMainContainer,{children:/*#__PURE__*/_jsxs(ListContext.Provider,{value:{movieList:movieList,baseImgUrl:baseImgUrl,tvList:tvList,nowPlayingList:nowPlayingList,videoList:videoList,baseYouTubeUrl:baseYouTubeUrl},children:[/*#__PURE__*/_jsx(MovieList,{}),/*#__PURE__*/_jsx(TvList,{}),/*#__PURE__*/_jsx(PlayingList,{})]})});};","map":{"version":3,"sources":["/Users/catalina/Desktop/repositories/imdb-react/src/Pages/Home.js"],"names":["useContext","useEffect","useState","axios","StyledMainContainer","MovieList","TvList","PlayingList","VideoList","ListContext","SearchContext","myApi","baseImgUrl","baseMovieUrl","baseTvUrl","baseVideoUrl","baseNowPlayingUrl","baseYouTubeUrl","Home","movieList","setMovieList","tvList","setTvList","videoList","setVideoList","nowPlayingList","setNowPlayingList","inputVal","query","console","log","get","params","api_key","page","then","res","data","results","catch","err","finally"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { StyledMainContainer } from './Styles';\nimport { MovieList, TvList, PlayingList, VideoList } from './Sections';\nimport { ListContext, SearchContext } from '../context';\n\nconst myApi = '64f9385d47c970d860ccd6c147841242';\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\nconst baseMovieUrl = 'https://api.themoviedb.org/3/search/movie';\nconst baseTvUrl = 'https://api.themoviedb.org/3/search/tv';\nconst baseVideoUrl = 'https://api.themoviedb.org/3/movie/200/videos';\nconst baseNowPlayingUrl = 'https://api.themoviedb.org/3/movie/now_playing';\nconst baseYouTubeUrl = 'https://www.youtube.com/embed';\n\nexport const Home = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [tvList, setTvList] = useState([]);\n  const [videoList, setVideoList] = useState([]);\n  const [nowPlayingList, setNowPlayingList] = useState([]);\n\n  const { inputVal, query } = useContext(SearchContext);\n  console.log('Home -> videoList', videoList);\n\n  useEffect(() => {\n    axios\n      .get(baseMovieUrl, {\n        params: {\n          api_key: myApi,\n          query: inputVal || 'a',\n          page: 1,\n        },\n      })\n      .then((res) => setMovieList(res.data.results))\n      .catch((err) => console.log(err))\n      .finally();\n  }, [inputVal]);\n\n  useEffect(() => {\n    axios\n      .get(baseTvUrl, {\n        params: {\n          api_key: myApi,\n          query: inputVal || 'a',\n        },\n      })\n      .then((res) => setTvList(res.data.results));\n  }, [inputVal]);\n\n  useEffect(() => {\n    axios\n      .get(baseNowPlayingUrl, {\n        params: {\n          api_key: myApi,\n          page: 1,\n        },\n      })\n      .then((res) => setNowPlayingList(res.data.results));\n  }, [inputVal]);\n\n  useEffect(() => {\n    axios\n      .get(baseVideoUrl, {\n        params: {\n          api_key: myApi,\n        },\n      })\n      .then((res) => setVideoList(res.data.results))\n      .catch()\n      .finally();\n  }, [inputVal]);\n\n  return (\n    <StyledMainContainer>\n      <ListContext.Provider\n        value={{\n          movieList,\n          baseImgUrl,\n          tvList,\n          nowPlayingList,\n          videoList,\n          baseYouTubeUrl,\n        }}\n      >\n        <MovieList />\n        <TvList />\n        <PlayingList />\n      </ListContext.Provider>\n    </StyledMainContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}